function subsystem = SLgetSubsystem2D(shearletSystem,subsystemIdxs)
%SLgetSubsystem2D Compute subset of an existing 2D shearlet system.
%
%Usage:
%
% subsystem = SLgetSubsystem2D(shearletSystem)
%
%Input:
%
% shearletSystem: A shearlet system, generated by SLgetShearletSystem2D.
%  subsystemIdxs: A Nx3 array of shearlet indexes, specifying the desired
%                 subset of shearlets. 
%
%Output:
%
%             subsystem: A structure containing the specified subsystem of shearletSystem.
%            .shearlets: A XxYxN array of N 2D shearlets in the frequency domain where X and Y   
%                        denote the size of each shearlet. To get the i-th shearlet in the 
%                        time domain, use fftshift(ifft2(ifftshift(subsystem.shearlets(:,:,i)))). 
%                        Each Shearlet is centered at floor([X Y]/2) + 1.
%                 .size: The size of each shearlet in the system.
%          .shearLevels: The respective input argument is stored here.
%                 .full: The respective input argument is stored here.
%           .nShearlets: Number of shearlets in the
%                        shearletSystem.shearlets array. This number
%                        also describes the redundancy of the system.
%        .shearletdIdxs: A Nx3 array, specifying each shearlet in the system
%                        in the format [cone scale shearing] where N
%                        denotes the number of shearlets. The vertical cone in the time 
%                        domain is indexed by 1 while the horizontal cone is indexed by 2.
%                        The lowpass shearlet is indexed by [0 0 0].
%     .dualFrameWeights: A XxY matrix containing the absolute and squared sum over all shearlets
%                        stored in shearletSystem.shearlets. These weights
%                        are needed to compute the dual Shearlet Frame during reconstruction.
%                  .RMS: A 1xnShearlets array containing the root mean
%                        squares (L2-norm divided by sqrt(X*Y)) of all shearlets stored in
%                        shearletSystem.shearlets. These values can be used to normalize 
%                        shearlet coefficients to make them comparable.
%               .useGPU: Logical Value. Tells if the shearlet system is stored on the GPU.    
%
%Example 1:
%
% %Subsystem consisting only of the third scale of a 4-scaled shearlet system
% shearletSystem = SLgetShearletSystem2D(0,512,512,4);
% subIdxs = SLgetShearletIdxs2D(shearletSystem.shearLevels,shearletSystem.full,'scales',3);
% subsystem = SLgetSubsystem2D(shearletSystem,subIdxs);
%
%Example 2:
%
% %Subsystem consisting only of of all shearlets sheared once on the first cone. 
% shearletSystem = SLgetShearletSystem2D(0,512,512,4);
% subIdxs = SLgetShearletIdxs2D(shearletSystem.shearLevels,shearletSystem.full,'cones',1,'shearings',1);
% subsystem = SLgetSubsystem2D(shearletSystem,subIdxs);
%
%See also: SLgetShearletSystem2D, SLgetShearletIdxs2D

    %% check input arguments
    if nargin < 1
        error('Too few input arguments!');
    end;
    
    help = ismember(shearletSystem.shearletIdxs,subsystemIdxs,'rows');    
    subsystem = struct('shearlets',shearletSystem.shearlets(:,:,help),'size',shearletSystem.size,'shearLevels',shearletSystem.shearLevels,'full',shearletSystem.full,'nShearlets',sum(help),'shearletIdxs',shearletSystem.shearletIdxs(help,:),'dualFrameWeights',shearletSystem.dualFrameWeights,'RMS',shearletSystem.RMS(help),'useGPU',shearletSystem.useGPU);
end

%
%  Copyright (c) 2014. Rafael Reisenhofer
%
%  Part of ShearLab3D v1.1
%  Built Mon, 10/11/2014
%  This is Copyrighted Material
%
%  If you use or mention this code in a publication please cite the website www.shearlab.org and the following paper:
%  G. Kutyniok, W.-Q. Lim, R. Reisenhofer
%  ShearLab 3D: Faithful Digital SHearlet Transforms Based on Compactly Supported Shearlets.
%  ACM Trans. Math. Software 42 (2016), Article No.: 5.
