function outImg = HSIToRGB(origImg)
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here
H = origImg(:,:,1);
S = origImg(:,:,2);
I = origImg(:,:,3);

[a b c] = size(origImg);
R = zeros(a,b);
G = zeros(a,b);
B = zeros(a,b);
tempH = zeros(a,b);
%RGÇø((H >= 0) & (H <120))
B((H >= 0) & (H <120)) = I((H >= 0) & (H <120)) .* (1 - S((H >= 0) & (H <120)));
R((H >= 0) & (H <120)) = I((H >= 0) & (H <120)) .* (1 + ((S((H >= 0) & (H <120)) .* cosd(H((H >= 0) & (H <120)))) ./ cosd(60 - H((H >= 0) & (H <120)))));
G((H >= 0) & (H <120)) = 3 * I((H >= 0) & (H <120)) -(R((H >= 0) & (H <120)) + B((H >= 0) & (H <120)));

%GBÇø((H >= 120) & (H < 240))
tempH((H >= 120) & (H <240)) = H((H >= 120) & (H <240)) - 120;
R((H >= 120) & (H < 240)) = I((H >= 120) & (H < 240)) .* (1 - S((H >= 120) & (H < 240)));
G((H >= 120) & (H < 240)) = I((H >= 120) & (H < 240)) .* (1 + ((S((H >= 120) & (H < 240)) .* cosd(tempH((H >= 120) & (H < 240)))) ./ cosd(60 - tempH((H >= 120) & (H < 240)))));
B((H >= 120) & (H < 240)) = 3 * I((H >= 120) & (H < 240)) -(R((H >= 120) & (H < 240)) + G((H >= 120) & (H < 240)));

%BRÇø((H >= 240) & (H <360))
tempH((H >= 240) & (H <360)) = H((H >= 240) & (H <360)) - 120;
G((H >= 240) & (H <360)) = I((H >= 240) & (H <360)) .* (1 - S((H >= 240) & (H <360)));
B((H >= 240) & (H <360)) = I((H >= 240) & (H <360)) .* (1 + ((S((H >= 240) & (H <360)) .* cosd(tempH((H >= 240) & (H <360)))) ./ cosd(60 - tempH((H >= 240) & (H <360)))));
R((H >= 240) & (H <360)) = 3 * I((H >= 240) & (H <360)) -(G((H >= 240) & (H <360)) + B((H >= 240) & (H <360)));

outImg = uint8(cat(3,R,G,B));
end

